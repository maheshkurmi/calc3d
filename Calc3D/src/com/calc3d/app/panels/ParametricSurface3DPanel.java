package com.calc3d.app.panels;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Window;
import java.text.DecimalFormat;

import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.GroupLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.TitledBorder;

import com.calc3d.app.elements.Element3D;
import com.calc3d.app.elements.Element3DParametricSurface;
import com.calc3d.app.resources.Messages;
import com.calc3d.mathparser.Calculable;
import com.calc3d.mathparser.ExpressionBuilder;

/**
 *
 * @author mahesh
 */
public class ParametricSurface3DPanel extends Object3DCreatePanel {

	private Element3DParametricSurface parametricSurface3D;
    /**
     * Creates new form ParametricSurface3DPanel
     */
    public ParametricSurface3DPanel(Element3DParametricSurface object3D) {
    	parametricSurface3D=object3D;
    	initComponents();
    	txtExpressionX.setText(parametricSurface3D.getExprX());
    	txtExpressionY.setText(parametricSurface3D.getExprY());
    	txtExpressionZ.setText(parametricSurface3D.getExprZ());
    	txtMin_u.setValue(parametricSurface3D.getMin_u());
    	txtMin_v.setValue(parametricSurface3D.getMin_v());
    	txtMax_u.setValue(parametricSurface3D.getMax_u());
    	txtMax_v.setValue(parametricSurface3D.getMax_v());
    	spinSegmentsU.setValue(parametricSurface3D.getuDivisions());
    	spinSegmentsV.setValue(parametricSurface3D.getvDivisions());
    	comboFillMode.setSelectedIndex(parametricSurface3D.getFillmode());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
    	 lblDrawMode = new javax.swing.JLabel();
        lblSettingsV = new javax.swing.JLabel();
        lblMin_u = new javax.swing.JLabel();
        lblMax_u = new javax.swing.JLabel();
        lblMin_v = new javax.swing.JLabel();
        lblMax_v = new javax.swing.JLabel();
        
        txtMin_u = new javax.swing.JFormattedTextField(new DecimalFormat());
        txtMax_u = new javax.swing.JFormattedTextField(new DecimalFormat());
        txtMin_v = new javax.swing.JFormattedTextField(new DecimalFormat());
        txtMax_v = new javax.swing.JFormattedTextField(new DecimalFormat());
     
        lblExpressionX = new javax.swing.JLabel();    
        lblExpressionY = new javax.swing.JLabel();
        lblExpressionZ = new javax.swing.JLabel();
        txtExpressionX = new javax.swing.JTextField();
        txtExpressionY = new javax.swing.JTextField();
        txtExpressionZ = new javax.swing.JTextField();
    
        lblSettingsU = new javax.swing.JLabel();
        comboFillMode = new javax.swing.JComboBox();
       
        lblSegmentsU = new javax.swing.JLabel();
        lblSegmentsV = new javax.swing.JLabel();
        
        spinSegmentsU = new javax.swing.JSpinner();
        spinSegmentsV = new javax.swing.JSpinner();
       
        lblMax_u.setText("maxU =");
        
        lblSettingsV.setText("Parameter 'v' Settings:");

      

        txtMin_u.setText("0");

        lblDrawMode.setText("DrawMode");

        txtMax_u.setText("1");

        lblExpressionX.setText("X(u,v) =");

        lblMin_u.setText("minU =");

        lblExpressionZ.setText("Z(u,v) =");

        lblSettingsU.setText("Parameter 'u' Settings:");

        comboFillMode.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"Solid", "WireFrame",  "SolidGradient" }));
    	comboFillMode.setMaximumSize(new Dimension(10000,0));
    	      
        txtExpressionZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtExpressionZActionPerformed(evt);
            }
        });

        txtExpressionY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtExpressionYActionPerformed(evt);
            }
        });

        lblMax_v.setText("maxV =");

        lblExpressionY.setText("Y(u,v) =");

        spinSegmentsU.setModel(new javax.swing.SpinnerNumberModel(20, 5, 100, 1));

        txtMax_v.setText("1");

        lblSegmentsU.setText("segmentsU");

        lblSegmentsV.setText("segmentsV");

        lblMin_v.setText("minV =");

        spinSegmentsV.setModel(new javax.swing.SpinnerNumberModel(20, 5, 100, 1));

        txtMin_v.setText("0");

		JPanel objectCreatePanel= new JPanel();
		
		/*
		TitledBorder border = BorderFactory.createTitledBorder(	BorderFactory.createEtchedBorder(),	Messages.getString("panel.body.createobject"));
		border.setTitlePosition(TitledBorder.TOP);
		objectCreatePanel.setBorder(border);
        */
		GroupLayout layout;
		layout = new GroupLayout(objectCreatePanel);
		objectCreatePanel.setLayout(layout);
		layout.setAutoCreateContainerGaps(true);
		layout.setAutoCreateGaps(true);
		
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDrawMode)
                        .addContainerGap())
                    .addComponent(lblSettingsV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblExpressionX, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(lblExpressionY, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblExpressionZ, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtExpressionY)
                                    .addComponent(txtExpressionX)
                                    .addComponent(txtExpressionZ)))
                            .addComponent(lblSettingsU, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblMin_u)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMin_u, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(lblMax_u)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMax_u, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                                        .addComponent(lblSegmentsU)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(spinSegmentsU, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(comboFillMode, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblMin_v)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMin_v, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(lblMax_v)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMax_v, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblSegmentsV)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(spinSegmentsV, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblExpressionX)
                    .addComponent(txtExpressionX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblExpressionY)
                    .addComponent(txtExpressionY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblExpressionZ)
                    .addComponent(txtExpressionZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblSettingsU)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMin_u)
                    .addComponent(lblMax_u)
                    .addComponent(lblSegmentsU)
                    .addComponent(spinSegmentsU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMin_u, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMax_u, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblSettingsV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMin_v)
                    .addComponent(lblMax_v)
                    .addComponent(lblSegmentsV)
                    .addComponent(spinSegmentsV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMin_v, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMax_v, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDrawMode)
                    .addComponent(comboFillMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

		this.setLayout(new BorderLayout());
		add(objectCreatePanel);
        
    }// </editor-fold>

    private void txtExpressionZActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void txtExpressionYActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    // Variables declaration - do not modify
    private javax.swing.JComboBox comboFillMode;
    private javax.swing.JLabel lblDrawMode;
    private javax.swing.JLabel lblExpressionX;
    private javax.swing.JLabel lblExpressionY;
    private javax.swing.JLabel lblExpressionZ;
    private javax.swing.JLabel lblMax_u;
    private javax.swing.JLabel lblMax_v;
    private javax.swing.JLabel lblMin_u;
    private javax.swing.JLabel lblMin_v;
    private javax.swing.JLabel lblSegmentsU;
    private javax.swing.JLabel lblSegmentsV;
    private javax.swing.JLabel lblSettingsU;
    private javax.swing.JLabel lblSettingsV;
    private javax.swing.JSpinner spinSegmentsU;
    private javax.swing.JSpinner spinSegmentsV;
    private javax.swing.JTextField txtExpressionX;
    private javax.swing.JTextField txtExpressionY;
    private javax.swing.JTextField txtExpressionZ;
    private javax.swing.JFormattedTextField txtMax_u;
    private javax.swing.JFormattedTextField txtMax_v;
    private javax.swing.JFormattedTextField txtMin_u;
    private javax.swing.JFormattedTextField txtMin_v;
    // End of variables declaration
    
	@Override
	public boolean isValidInput() {
		Calculable calc_x,calc_y,calc_z;
		double minu,minv,maxu,maxv;
		try {
			calc_x = new ExpressionBuilder(txtExpressionX.getText()).withVariableNames("u","v")
					.build();
			calc_y = new ExpressionBuilder(txtExpressionY.getText()).withVariableNames("u","v")
					.build();
			calc_z = new ExpressionBuilder(txtExpressionZ.getText()).withVariableNames("u","v")
					.build();
			/*
			minu=(Double) txtMin_u.getValue();
			minv=(Double) txtMin_v.getValue();
			maxu=(Double) txtMax_u.getValue();
			maxv=(Double) txtMax_v.getValue();
	
			if ((minu>=maxu)||(minv>=maxv))return false;
			*/
		} catch (Exception e) {
			errorMsg=e.toString();
			return false;
		}
		return true;
	}

	@Override
	public void showInvalidInputMessage(Window owner) {
		JOptionPane.showMessageDialog(owner, errorMsg, Messages.getString("panel.invalid.title"), JOptionPane.ERROR_MESSAGE);
	}

	@Override
	public Element3D getObject3D() {
		parametricSurface3D.setExprX(txtExpressionX.getText());
		parametricSurface3D.setExprY(txtExpressionY.getText());
		parametricSurface3D.setExprZ(txtExpressionZ.getText());
		parametricSurface3D.setMin_u(((Number)txtMin_u.getValue()).doubleValue());
		parametricSurface3D.setMin_v(((Number)txtMin_v.getValue()).doubleValue());
		parametricSurface3D.setMax_u(((Number)txtMax_u.getValue()).doubleValue());
		parametricSurface3D.setMax_v(((Number)txtMax_v.getValue()).doubleValue());
		parametricSurface3D.setuDivisions((Integer) spinSegmentsU.getValue());
		parametricSurface3D.setvDivisions((Integer) spinSegmentsV.getValue());
		parametricSurface3D.setFillmode(comboFillMode.getSelectedIndex());
		return parametricSurface3D;
	}

	@Override
	public void setObject3D(Element3D object3d) {
		if (!(object3d instanceof Element3DParametricSurface))return;
		parametricSurface3D=(Element3DParametricSurface) object3d;
       	txtExpressionX.setText(parametricSurface3D.getExprX());
    	txtExpressionY.setText(parametricSurface3D.getExprY());
    	txtExpressionZ.setText(parametricSurface3D.getExprZ());
    	txtMin_u.setValue(parametricSurface3D.getMin_u());
    	txtMin_v.setValue(parametricSurface3D.getMin_v());
    	txtMax_u.setValue(parametricSurface3D.getMax_u());
    	txtMax_u.setValue(parametricSurface3D.getMax_v());
    	spinSegmentsU.setValue(parametricSurface3D.getuDivisions());
    	spinSegmentsV.setValue(parametricSurface3D.getvDivisions());
    	comboFillMode.setSelectedIndex(parametricSurface3D.getFillmode());
	}
		
}
